{"version":3,"sources":["Filter/Filter.module.css","redux/Contacts/actions.js","redux/Contacts/reducers.js","redux/store.js","ContactList/ContactList.js","Filter/Filter.js","ContactForm/ContactForm.js","App.js","index.js","ContactForm/ContactForm.module.css","ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","filter","deleteContact","contactList","createReducer","actions","state","action","find","contact","alert","target","_","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","persistedReducer","persistReducer","contactReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","connect","loweredFilter","toLowerCase","includes","dispatch","map","className","s","contactName","contactNumber","addBtn","onClick","data","handler","e","value","console","log","label","inputTitle","input","type","onChange","onSubmit","useState","setName","setNumber","handleChange","nameId","numberId","form","preventDefault","htmlFor","pattern","title","required","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cd7b7880.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1Ok-5\",\"inputTitle\":\"Filter_inputTitle__BaM_d\",\"input\":\"Filter_input__343QN\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\n// export const addContact = ({ name, number }) => ({\r\n//   type: \"contacts/add\",\r\n//   payload: { id: uuidv4(), name, number },\r\n// });\r\n// export const deleteContact = (contactId) => ({\r\n//   type: \"contacts/delete\",\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const filter = (value) => ({\r\n//   type: \"contacts/filter\",\r\n//   payload: value,\r\n// });\r\n\r\n\r\nexport const addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: { id: uuidv4(), name, number }\r\n}));\r\nexport const filter = createAction(\"contacts/filter\")\r\nexport const deleteContact = createAction(\"contacts/delete\")","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./actions\";\r\n\r\n// const initState = () => {\r\n//   if (localStorage.getItem(\"contacts\")) {\r\n//     return JSON.parse(localStorage.getItem(\"contacts\"));\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n\r\nconst initState = [];\r\n\r\n// const contactList = (state = initState(), action) => {\r\n//   switch (action.type) {\r\n//     case \"contacts/add\":\r\n//       // const knownContact = state.find((contact) => {\r\n//       //   return contact.name === action.payload.name;\r\n//       // });\r\n//       if (\r\n//         state.find((contact) => {\r\n//           return contact.name === action.payload.name;\r\n//         })\r\n//       ) {\r\n//         alert(`Sorry, contact ${action.payload.name} already existing`);\r\n//         return state;\r\n//       } else {\r\n//         localStorage.setItem(\r\n//           \"contacts\",\r\n//           JSON.stringify([...state, action.payload])\r\n//         );\r\n//         return [...state, action.payload];\r\n//       }\r\n\r\n//     case \"contacts/delete\":\r\n//       const newState = state.filter(\r\n//         (contact) => contact.id !== action.payload.target.id\r\n//       );\r\n//       localStorage.setItem(\"contacts\", JSON.stringify(newState));\r\n//       return newState;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst contactList = createReducer(initState, {\r\n  [actions.addContact]: (state, action) => {\r\n    if (\r\n      state.find((contact) => {\r\n        return contact.name === action.payload.name;\r\n      })\r\n    ) {\r\n      alert(`Sorry, contact ${action.payload.name} already existing`);\r\n      return state;\r\n    } else {\r\n      // localStorage.setItem(\r\n      //   \"contacts\",\r\n      //   JSON.stringify([...state, action.payload])\r\n      // );\r\n      return [...state, action.payload];\r\n    }\r\n  },\r\n  [actions.deleteContact]: (state, action) => {\r\n    const newState = state.filter(\r\n      (contact) => contact.id !== action.payload.target.id\r\n    );\r\n    // localStorage.setItem(\"contacts\", JSON.stringify(newState));\r\n    return newState;\r\n  },\r\n});\r\n\r\n// const filter = (state = \"\", action) => {\r\n//   switch (action.type) {\r\n//     case \"contacts/filter\":\r\n//       return action.payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst filter = createReducer(\"\", {\r\n  [actions.filter]: (_, action) => action.payload,\r\n});\r\n\r\n// export const contactReducer = combineReducers({\r\n//   contacts: contactList,\r\n//   filter: filter,\r\n// });\r\nexport default combineReducers({\r\n  contacts: contactList,\r\n  filter: filter,\r\n});\r\n","import contactReducer from \"../redux/Contacts/reducers\";\r\nimport {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, contactReducer);\r\n// export const store = createStore(contactReducer, composeWithDevTools());\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import s from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/Contacts/actions\";\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n\r\n  return (\r\n    <>\r\n      {contacts.map((contact) => (\r\n        <div className={s.contacts} key={contact.id}>\r\n          <p id={contact.id} className={s.contactName}>\r\n            {contact.name}\r\n          </p>\r\n          <p className={s.contactNumber}>{contact.number}</p>\r\n          <button className={s.addBtn} id={contact.id} onClick={deleteContact}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  const filter = state.filter\r\n  const loweredFilter = filter.toLowerCase()\r\n  return {\r\n    contacts: state.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(loweredFilter)),\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: () => dispatch(actions.addContact()),\r\n  deleteContact: (id) => dispatch(actions.deleteContact(id)),\r\n\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { connect, } from \"react-redux\";\r\nimport * as actions from \"../redux/Contacts/actions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ data, handler }) {\r\n  console.log(data);\r\n  return (\r\n    <label className={s.label}>\r\n      <p className={s.inputTitle}>Find</p>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={data}\r\n        onChange={handler}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handler: (e) => dispatch(actions.filter(e.target.value))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/Contacts/actions\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    resetForm();\r\n  };\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={submit}>\r\n      <label className={s.label} htmlFor={nameId}>\r\n        <p className={s.inputTitle}>Name</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          id={nameId}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <label className={s.label} htmlFor={numberId}>\r\n        <p className={s.inputTitle}>Phone</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          id={numberId}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <button className={s.addBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: ({ name, number }) =>\r\n    dispatch(actions.addContact({ name, number })),\r\n  deleteContact: (id) => dispatch(actions.deleteContact(id)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <Filter />\r\n      <h2>Contacts</h2>\r\n      <ContactList />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2ZfWq\",\"label\":\"ContactForm_label__2WhRA\",\"input\":\"ContactForm_input__2lJDL\",\"addBtn\":\"ContactForm_addBtn__1UEzJ\",\"inputTitle\":\"ContactForm_inputTitle__1aRxK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__RMVQg\",\"addBtn\":\"ContactList_addBtn__xJmWq\",\"contactName\":\"ContactList_contactName__1V_8E\",\"contactNumber\":\"ContactList_contactNumber__3xWCA\"};"],"sourceRoot":""}