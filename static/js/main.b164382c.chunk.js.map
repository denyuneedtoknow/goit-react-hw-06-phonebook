{"version":3,"sources":["ContactForm/ContactForm.module.css","redux/Contacts/reducers.js","redux/store.js","redux/Contacts/actions.js","ContactList/ContactList.js","Filter/Filter.js","ContactForm/ContactForm.js","App.js","index.js","ContactList/ContactList.module.css","Filter/Filter.module.css"],"names":["module","exports","initState","localStorage","getItem","JSON","parse","contactReducer","combineReducers","contacts","state","action","type","console","log","payload","knownContact","find","contact","name","alert","setItem","stringify","newState","filter","id","target","store","createStore","composeWithDevTools","addContact","number","uuidv4","deleteContact","contactId","connect","loweredFilter","toLowerCase","includes","dispatch","actions","map","className","s","contactName","contactNumber","addBtn","onClick","data","handler","e","value","label","inputTitle","input","onChange","onSubmit","useState","setName","setNumber","setContact","handleChange","nameId","numberId","form","preventDefault","htmlFor","pattern","title","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,4BAA4B,WAAa,kC,mJCIrKC,EAAY,WAChB,OAAIC,aAAaC,QAAQ,YAChBC,KAAKC,MAAMH,aAAaC,QAAQ,aAE3B,IAsCHG,EAAiBC,0BAAgB,CAC5CC,SApCkB,WAAkC,IAAjCC,EAAgC,uDAAxBR,IAAaS,EAAW,uCACnD,OAAQA,EAAOC,MACb,IAAK,eACHC,QAAQC,IAAIH,EAAOI,SACnB,IAAMC,EAAeN,EAAMO,MAAK,SAACC,GAC/B,OAAOA,EAAQC,OAASR,EAAOI,QAAQI,QAEzC,OAAIH,GACFI,MAAM,kBAAD,OAAmBT,EAAOI,QAAQI,KAAlC,sBACET,IAEPP,aAAakB,QAAQ,WAAYhB,KAAKiB,UAAL,sBAAmBZ,GAAnB,CAA0BC,EAAOI,YAC5D,GAAN,mBAAWL,GAAX,CAAkBC,EAAOI,WAI7B,IAAK,kBACH,IAAMQ,EAAWb,EAAMc,QAAO,SAACN,GAAD,OAAaA,EAAQO,KAAOd,EAAOI,QAAQW,OAAOD,MAEhF,OADAtB,aAAakB,QAAQ,WAAYhB,KAAKiB,UAAUC,IACzCA,EACT,QACE,OAAOb,IAgBXc,OAba,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,MACO,oBADCA,EAAOC,KAEJD,EAAOI,QAEAL,K,QCrCPiB,EAAQC,sBAAYrB,EAAgBsB,iC,gCCDpCC,EAAa,SAAC,GAAD,IAAGX,EAAH,EAAGA,KAAMY,EAAT,EAASA,OAAT,MAAuB,CAC/CnB,KAAM,eACNG,QAAS,CAAEU,GAAIO,cAAUb,OAAMY,YAEpBE,EAAgB,SAACC,GAAD,MAAgB,CAC3CtB,KAAM,kBACNG,QAASmB,I,OCiBX,IAceC,eAdS,SAACzB,GACvB,IACM0B,EADS1B,EAAMc,OACQa,cAC7B,MAAO,CACL5B,SAAUC,EAAMD,SAASe,QAAO,SAACN,GAAD,OAC9BA,EAAQC,KAAKkB,cAAcC,SAASF,UAIf,SAACG,GAAD,MAAe,CACxCT,WAAY,kBAAMS,EAASC,MAC3BP,cAAe,SAACR,GAAD,OAAQc,EAASC,EAAsBf,QAGzCU,EApCf,YAAmD,IAA5B1B,EAA2B,EAA3BA,SAAUwB,EAAiB,EAAjBA,cAE/B,OACE,mCACGxB,EAASgC,KAAI,SAACvB,GAAD,OACZ,sBAAKwB,UAAWC,IAAElC,SAAlB,UACE,mBAAGgB,GAAIP,EAAQO,GAAIiB,UAAWC,IAAEC,YAAhC,SACG1B,EAAQC,OAEX,mBAAGuB,UAAWC,IAAEE,cAAhB,SAAgC3B,EAAQa,SACxC,wBAAQW,UAAWC,IAAEG,OAAQrB,GAAIP,EAAQO,GAAIsB,QAASd,EAAtD,sBAL+Bf,EAAQO,Y,gBCWjD,IAOeU,eAPS,SAACzB,GAAD,MAAY,CAClCsC,KAAMtC,EAAMc,WAGa,SAACe,GAAD,MAAe,CACxCU,QAAS,SAACC,GAAD,OAAOX,EFNgB,CAChC3B,KAAM,kBACNG,QEIwCmC,EAAExB,OAAOyB,YAEpChB,EAvBf,YAAoC,IAAlBa,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAEtB,OADApC,QAAQC,IAAIkC,GAEV,wBAAON,UAAWC,IAAES,MAApB,UACE,mBAAGV,UAAWC,IAAEU,WAAhB,kBACA,uBACEX,UAAWC,IAAEW,MACb1C,KAAK,OACLO,KAAK,SACLgC,MAAOH,EACPO,SAAUN,U,wBC+DlB,IAIed,cAAQ,MAJI,SAACI,GAAD,MAAe,CACxCiB,SAAU,gBAAGrC,EAAH,EAAGA,KAAMY,EAAT,EAASA,OAAT,OAAsBQ,EAASC,EAAmB,CAAErB,OAAMY,aACpEE,cAAe,SAACR,GAAD,OAAQc,EAASC,EAAsBf,QAEzCU,EA3Ef,YAAoC,IAAbqB,EAAY,EAAZA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOtC,EAAP,KAAauC,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO1B,EAAP,KAAe4B,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAgBG,GAAhB,WAEMC,EAAe,SAACX,GACpB,MAAwBA,EAAExB,OAAlBP,EAAR,EAAQA,KAAMgC,EAAd,EAAcA,MACd,OAAQhC,GACN,IAAK,OACHuC,EAAQP,GACR,MACF,IAAK,SACHQ,EAAUR,GACV,MACF,QACE,SAgBAW,EAAS9B,cACT+B,EAAW/B,cAEjB,OACE,uBAAMU,UAAWC,IAAEqB,KAAMR,SAXZ,SAACN,GACdA,EAAEe,iBACFL,EAAW,CAAEnC,GAAIO,cAAUb,OAAMY,WACjCyB,EAAS,CAAErC,OAAMY,WAPjB2B,EAAQ,IACRC,EAAU,KAcV,UACE,wBAAOjB,UAAWC,IAAES,MAAOc,QAASJ,EAApC,UACE,mBAAGpB,UAAWC,IAAEU,WAAhB,kBACA,uBACEX,UAAWC,IAAEW,MACb1C,KAAK,OACLO,KAAK,OACLgD,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRlB,MAAOhC,EACPM,GAAIqC,EACJP,SAAUM,OAGd,wBAAOnB,UAAWC,IAAES,MAAOc,QAASH,EAApC,UACE,mBAAGrB,UAAWC,IAAEU,WAAhB,mBACA,uBACEX,UAAWC,IAAEW,MACb1C,KAAK,MACLO,KAAK,SACLgD,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRlB,MAAOpB,EACPN,GAAIsC,EACJR,SAAUM,OAGd,wBAAQnB,UAAWC,IAAEG,OAAQlC,KAAK,SAAlC,+BC1CS0D,MApBf,WAKE,OACE,sBAAK5B,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,IAEA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,QCZN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU9C,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ+C,SAASC,eAAe,U,kBCb1B3E,EAAOC,QAAU,CAAC,SAAW,8BAA8B,OAAS,4BAA4B,YAAc,iCAAiC,cAAgB,qC,kBCA/JD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,WAAa,2BAA2B,MAAQ,yB","file":"static/js/main.b164382c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3xbHk\",\"label\":\"ContactForm_label__3Nq7J\",\"input\":\"ContactForm_input__2o8OC\",\"addBtn\":\"ContactForm_addBtn__32R64\",\"inputTitle\":\"ContactForm_inputTitle__1YMxJ\"};","import { combineReducers } from \"redux\";\r\n\r\n\r\n\r\n\r\nconst initState = () => {\r\n  if (localStorage.getItem(\"contacts\")) {\r\n    return JSON.parse(localStorage.getItem(\"contacts\"))\r\n  }\r\n  else { return [] }\r\n}\r\n\r\nconst contactList = (state = initState(), action) => {\r\n  switch (action.type) {\r\n    case \"contacts/add\":\r\n      console.log(action.payload);\r\n      const knownContact = state.find((contact) => {\r\n        return contact.name === action.payload.name;\r\n      });\r\n      if (knownContact) {\r\n        alert(`Sorry, contact ${action.payload.name} already existing`);\r\n        return state\r\n      } else {\r\n        localStorage.setItem(\"contacts\", JSON.stringify([...state, action.payload]))\r\n        return [...state, action.payload];\r\n\r\n      }\r\n\r\n    case \"contacts/delete\":\r\n      const newState = state.filter((contact) => contact.id !== action.payload.target.id);\r\n      localStorage.setItem(\"contacts\", JSON.stringify(newState))\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filter = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"contacts/filter\":\r\n      return action.payload\r\n\r\n    default: return state;\r\n  };\r\n}\r\n\r\n\r\n\r\nexport const contactReducer = combineReducers({\r\n  contacts: contactList,\r\n  filter: filter,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { contactReducer } from \"../redux/Contacts/reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport const store = createStore(contactReducer, composeWithDevTools());\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\nexport const addContact = ({ name, number }) => ({\r\n  type: \"contacts/add\",\r\n  payload: { id: uuidv4(), name, number },\r\n});\r\nexport const deleteContact = (contactId) => ({\r\n  type: \"contacts/delete\",\r\n  payload: contactId,\r\n});\r\nexport const consolingUp = (value) => ({\r\n  type: \"contacts/consolingUp\",\r\n  payload: value,\r\n});\r\nexport const consolingDown = (value) => ({\r\n  type: \"contacts/consolingDown\",\r\n  payload: value,\r\n});\r\nexport const filter = (value) => ({\r\n  type: \"contacts/filter\",\r\n  payload: value,\r\n});\r\n\r\n","import s from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/Contacts/actions\";\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n\r\n  return (\r\n    <>\r\n      {contacts.map((contact) => (\r\n        <div className={s.contacts} key={contact.id}>\r\n          <p id={contact.id} className={s.contactName}>\r\n            {contact.name}\r\n          </p>\r\n          <p className={s.contactNumber}>{contact.number}</p>\r\n          <button className={s.addBtn} id={contact.id} onClick={deleteContact}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  const filter = state.filter\r\n  const loweredFilter = filter.toLowerCase()\r\n  return {\r\n    contacts: state.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(loweredFilter)),\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: () => dispatch(actions.addContact()),\r\n  deleteContact: (id) => dispatch(actions.deleteContact(id)),\r\n\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { connect, } from \"react-redux\";\r\nimport * as actions from \"../redux/Contacts/actions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ data, handler }) {\r\n  console.log(data);\r\n  return (\r\n    <label className={s.label}>\r\n      <p className={s.inputTitle}>Find</p>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={data}\r\n        onChange={handler}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handler: (e) => dispatch(actions.filter(e.target.value))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { useState, } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/Contacts/actions\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    setContact({ id: uuidv4(), name, number });\r\n    onSubmit({ name, number });\r\n    resetForm();\r\n  };\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={submit}>\r\n      <label className={s.label} htmlFor={nameId}>\r\n        <p className={s.inputTitle}>Name</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          id={nameId}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <label className={s.label} htmlFor={numberId}>\r\n        <p className={s.inputTitle}>Phone</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          id={numberId}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <button className={s.addBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: ({ name, number }) => dispatch(actions.addContact({ name, number })),\r\n  deleteContact: (id) => dispatch(actions.deleteContact(id)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <Filter />\r\n      <h2>Contacts</h2>\r\n      <ContactList />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3UthP\",\"addBtn\":\"ContactList_addBtn__S4sdJ\",\"contactName\":\"ContactList_contactName__18R9A\",\"contactNumber\":\"ContactList_contactNumber__6v1eb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3spoi\",\"inputTitle\":\"Filter_inputTitle___rBBr\",\"input\":\"Filter_input__1tojl\"};"],"sourceRoot":""}